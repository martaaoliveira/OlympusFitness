{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Slideshow from \"react-native-image-slider-show\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar image1 = require(\"../assets/images/PT.jpg\");\nvar image2 = require(\"../assets/images/nutricao.jpg\");\nvar image3 = require(\"../assets/images/osteopatia.jpg\");\nvar image4 = require(\"../assets/images/regimelivre.jpg\");\nvar image5 = require(\"../assets/images/aulasgrupo.jpg\");\nvar dataSource = [{\n  title: \"Burger 1\",\n  caption: \"Original Cheezy Meat\",\n  url: image5,\n  navigateTo: \"Serviços\"\n}, {\n  title: \"Burger 2\",\n  caption: \"100% Original Beef\",\n  url: image4,\n  navigateTo: \"Serviços\"\n}, {\n  title: \"Burger 3\",\n  caption: \"Mouthfull Of Happiness\",\n  url: image3,\n  navigateTo: \"Serviços\"\n}, {\n  title: \"Burger 3\",\n  caption: \"Mouthfull Of Happiness\",\n  url: image2,\n  navigateTo: \"Serviços\"\n}, {\n  title: \"Burger 3\",\n  caption: \"Mouthfull Of Happiness\",\n  url: image1,\n  navigateTo: \"Serviços\"\n}];\nvar ImageSlider = function ImageSlider(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    position = _useState2[0],\n    setPosition = _useState2[1];\n  useEffect(function () {\n    var toggle = setInterval(function () {\n      setPosition(function (prevPosition) {\n        return prevPosition === dataSource.length - 1 ? 0 : prevPosition + 1;\n      });\n    }, 3000);\n    return function () {\n      return clearInterval(toggle);\n    };\n  }, []);\n  var handleImageClick = function handleImageClick(navigateTo) {\n    if (navigateTo) {\n      navigation.navigate(navigateTo);\n    }\n  };\n  return _jsx(View, {\n    style: styles.sliderContainer,\n    children: _jsx(Slideshow, {\n      dataSource: dataSource,\n      position: position,\n      onPositionChanged: setPosition,\n      height: height * 0.5,\n      width: width,\n      resizeMode: \"st\",\n      onPress: function onPress() {\n        return handleImageClick(dataSource[position].navigateTo);\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  sliderContainer: {}\n});\nexport default ImageSlider;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","TouchableOpacity","Image","Dimensions","Slideshow","jsx","_jsx","_Dimensions$get","get","width","height","image1","require","image2","image3","image4","image5","dataSource","title","caption","url","navigateTo","ImageSlider","_ref","navigation","_useState","_useState2","_slicedToArray","position","setPosition","toggle","setInterval","prevPosition","length","clearInterval","handleImageClick","navigate","style","styles","sliderContainer","children","onPositionChanged","resizeMode","onPress","create"],"sources":["/home/marta/Documentos/OlympusFitness/Components/ImageSlider.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, Image, Dimensions } from \"react-native\";\nimport Slideshow from \"react-native-image-slider-show\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst image1 = require('../assets/images/PT.jpg');\nconst image2 = require('../assets/images/nutricao.jpg');\nconst image3 = require('../assets/images/osteopatia.jpg');\nconst image4 = require('../assets/images/regimelivre.jpg');\nconst image5 = require('../assets/images/aulasgrupo.jpg');\n\nconst dataSource = [\n  {\n    title: \"Burger 1\",\n    caption: \"Original Cheezy Meat\",\n    url: image5,\n    navigateTo: \"Serviços\" // Specify the screen name to navigate to\n  },\n  {\n    title: \"Burger 2\",\n    caption: \"100% Original Beef\",\n    url: image4,\n    navigateTo: \"Serviços\" // Specify the screen name to navigate to\n  },\n  {\n    title: \"Burger 3\",\n    caption: \"Mouthfull Of Happiness\",\n    url: image3,\n    navigateTo: \"Serviços\" // Specify the screen name to navigate to\n  },\n  {\n    title: \"Burger 3\",\n    caption: \"Mouthfull Of Happiness\",\n    url: image2,\n    navigateTo: \"Serviços\" // Specify the screen name to navigate to\n  },\n  {\n    title: \"Burger 3\",\n    caption: \"Mouthfull Of Happiness\",\n    url: image1,\n    navigateTo: \"Serviços\" // Specify the screen name to navigate to\n  }\n];\n\nconst ImageSlider = ({ navigation }) => {\n  const [position, setPosition] = useState(0);\n\n  useEffect(() => {\n    const toggle = setInterval(() => {\n      setPosition((prevPosition) => (prevPosition === dataSource.length - 1 ? 0 : prevPosition + 1));\n    }, 3000);\n\n    return () => clearInterval(toggle);\n  }, []);\n\n  const handleImageClick = (navigateTo) => {\n    // Navigate to the specified screen when an image is clicked\n    if (navigateTo) {\n      navigation.navigate(navigateTo);\n    }\n  };\n\n  return (\n    <View style={styles.sliderContainer}>\n      <Slideshow\n        dataSource={dataSource}\n        position={position}\n        onPositionChanged={setPosition}\n        height={height * 0.5} // Use a percentage of the screen height\n        width={width}  // Use the full screen width\n        resizeMode=\"st\" // You can try different resizeMode values like 'cover', 'contain', or 'stretch'\n        onPress={() => handleImageClick(dataSource[position].navigateTo)} // Handle image press\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sliderContainer: {\n\n  }\n});\n\nexport default ImageSlider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}