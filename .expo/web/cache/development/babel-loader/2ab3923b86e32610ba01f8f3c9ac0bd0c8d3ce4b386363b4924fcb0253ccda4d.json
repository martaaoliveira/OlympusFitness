{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["/home/marta/Documentos/OlympusFitness/data/MockDataAPI.js"],"sourcesContent":["// import { Text } from 'react-native';\n// import React, { Component } from 'react';\n// import { recipes, categories, ingredients } from './dataArrays';\n\n// export function getCategoryById(categoryId) {\n//   let category;\n//   categories.map(data => {\n//     if (data.id == categoryId) {\n//       category = data;\n//     }\n//   });\n//   return category;\n// }\n\n// export function getIngredientName(ingredientID) {\n//   let name;\n//   ingredients.map(data => {\n//     if (data.ingredientId == ingredientID) {\n//       name = data.name;\n//     }\n//   });\n//   return name;\n// }\n\n// export function getIngredientUrl(ingredientID) {\n//   let url;\n//   ingredients.map(data => {\n//     if (data.ingredientId == ingredientID) {\n//       url = data.photo_url;\n//     }\n//   });\n//   return url;\n// }\n\n// export function getCategoryName(categoryId) {\n//   let name;\n//   categories.map(data => {\n//     if (data.id == categoryId) {\n//       name = data.name;\n//     }\n//   });\n//   return name;\n// }\n\n// export function getRecipes(categoryId) {\n//   const recipesArray = [];\n//   recipes.map(data => {\n//     if (data.categoryId == categoryId) {\n//       recipesArray.push(data);\n//     }\n//   });\n//   return recipesArray;\n// }\n\n// // modifica\n// export function getRecipesByIngredient(ingredientId) {\n//   const recipesArray = [];\n//   recipes.map(data => {\n//     data.ingredients.map(index => {\n//       if (index[0] == ingredientId) {\n//         recipesArray.push(data);\n//       }\n//     });\n//   });\n//   return recipesArray;\n// }\n\n// export function getNumberOfRecipes(categoryId) {\n//   let count = 0;\n//   recipes.map(data => {\n//     if (data.categoryId == categoryId) {\n//       count++;\n//     }\n//   });\n//   return count;\n// }\n\n// export function getAllIngredients(idArray) {\n//   const ingredientsArray = [];\n//   idArray.map(index => {\n//     ingredients.map(data => {\n//       if (data.ingredientId == index[0]) {\n//         ingredientsArray.push([data, index[1]]);\n//       }\n//     });\n//   });\n//   return ingredientsArray;\n// }\n\n// // functions for search\n// export function getRecipesByIngredientName(ingredientName) {\n//   const nameUpper = ingredientName.toUpperCase();\n//   const recipesArray = [];\n//   ingredients.map(data => {\n//     if (data.name.toUpperCase().includes(nameUpper)) {\n//       // data.name.yoUpperCase() == nameUpper\n//       const recipes = getRecipesByIngredient(data.ingredientId);\n//       const unique = [...new Set(recipes)];\n//       unique.map(item => {\n//         recipesArray.push(item);\n//       });\n//     }\n//   });\n//   const uniqueArray = [...new Set(recipesArray)];\n//   return uniqueArray;\n// }\n\n// export function getRecipesByCategoryName(categoryName) {\n//   const nameUpper = categoryName.toUpperCase();\n//   const recipesArray = [];\n//   categories.map(data => {\n//     if (data.name.toUpperCase().includes(nameUpper)) {\n//       const recipes = getRecipes(data.id); // return a vector of recipes\n//       recipes.map(item => {\n//         recipesArray.push(item);\n//       });\n//     }\n//   });\n//   return recipesArray;\n// }\n\n// export function getRecipesByRecipeName(recipeName) {\n//   const nameUpper = recipeName.toUpperCase();\n//   const recipesArray = [];\n//   recipes.map(data => {\n//     if (data.title.toUpperCase().includes(nameUpper)) {\n//       recipesArray.push(data);\n//     }\n//   });\n//   return recipesArray;\n// }\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}